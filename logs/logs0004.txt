
Current Prompt:
 
### Instructions:
You are a data extraction tool capable of extracting data from each page of an invoice.

1. Please extract the data in this invoice and format it to the given output JSON schema.

2. Extract all key-value pairs from the invoice.

3. If there are tables in the invoice, capture all of the rows and columns in the JSON object. 
Even if a column is blank, include it as a key in the JSON object with a null value.

4. If a row is blank denote missing fields with "null" values.

5. If the page contains no charge data, please output an empty JSON object and don't make up any data.

6. Don't interpolate or make up data.

7. Please maintain the table structure of the charges, i.e. capture all of the rows and columns in the JSON object.

8. Ensuring the order of key-value pairs and tabular data aligns with the original text.


The language model must interpret and execute these extraction and formatting instructions accurately.

Perform the task as per above instructions on the following invoice document:
	
	
### INPUT invoice:
	

-----------------Invoice------------------
                              Page 1 of 3

Invoice Number: INV-12345
Customer: XYZ Corp
Invoice Date: 2024-06-01


Item    Quantity    Price     Total
item_1     5         $100      500
item_2     10        $50       500
item_3     6         $10       60

					Subtotal: 1060
					Total GST: 500
					Total Amount: $1560
--------------------------------------------

	
### OUTPUT JSON SCHEMA:


	
{'invoice_number': 'string', 'customer': 'string', 'invoice_date': 'yyyy-mm-dd', 'sub_total': 'number', 'total_GST': 'number', 'total_amount': 'number', 'Line_Items': [{'item': 'string', 'quantity': 'number', 'price': 'number', 'total': 'number'}]}

	

Current Output:
 {
  "invoice_number": "INV-12345",
  "customer": "XYZ Corp",
  "invoice_date": "2024-06-01",
  "sub_total": 1060,
  "total_GST": 500,
  "total_amount": 1560,
  "Line_Items": [
    {
      "item": "item_1",
      "quantity": 5,
      "price": 100,
      "total": 500
    },
    {
      "item": "item_2",
      "quantity": 10,
      "price": 50,
      "total": 500
    },
    {
      "item": "item_3",
      "quantity": 6,
      "price": 10,
      "total": 60
    }
  ]
}

Exact Match Details:
Total fields: 19
Matched fields: 18

Current State:
Exact Match: 0.9474
Similarity: 0.9793

Exact Match Details:
Total fields: 19
Matched fields: 18

Updated Prompt: 
### Revised Instruction Prompt:

### Instructions:
You are a data extraction tool designed to accurately extract data from each page of an invoice and format it according to the specified JSON schema.

1. **Output Format**: Please extract the data from the invoice and format it as a JSON object. Ensure that all keys and string values are enclosed in double quotes, and numeric values are represented as numbers without quotes.

2. **Data Extraction**: Extract all key-value pairs from the invoice. If there are tables present, capture all rows and columns in the JSON object, maintaining the original table structure. Include all columns, even if they are blank, using null values for missing data.

3. **Handling Blank Rows and Columns**: If a row is blank, denote missing fields with "null" values. If the page contains no charge data, output an empty JSON object and do not fabricate any data.

4. **Consistency in Data Types**: Ensure that the data types are consistent throughout the output. Numeric values should remain as numbers, and string values should be enclosed in double quotes.

5. **Order of Key-Value Pairs**: Maintain the order of key-value pairs and tabular data as they appear in the original invoice. This order should match the provided output example.

6. **Accuracy**: It is crucial that the extracted data matches the invoice exactly. Do not interpolate, make assumptions, or alter any data.

### Example Output:
```json
{
  "invoice_number": "12345",
  "date": "2023-10-01",
  "charges": [
    {
      "description": "Service A",
      "amount": 100.00,
      "quantity": 1
    },
    {
      "description": "Service B",
      "amount": 200.00,
      "quantity": 2
    }
  ],
  "total": 500.00
}
```

Perform the task as per the above instructions on the following invoice document:
	
	
### INPUT invoice:
	

-----------------Invoice------------------
                              Page 1 of 3

Invoice Number: INV-12345
Customer: XYZ Corp
Invoice Date: 2024-06-01


Item    Quantity    Price     Total
item_1     5         $100      500
item_2     10        $50       500
item_3     6         $10       60

					Subtotal: 1060
					Total GST: 500
					Total Amount: $1560
--------------------------------------------

	
### OUTPUT JSON SCHEMA:


	
{'invoice_number': 'string', 'customer': 'string', 'invoice_date': 'yyyy-mm-dd', 'sub_total': 'number', 'total_GST': 'number', 'total_amount': 'number', 'Line_Items': [{'item': 'string', 'quantity': 'number', 'price': 'number', 'total': 'number'}]}

	
State: [0.94736844 0.97925204]
Last_output: {
  "invoice_number": "INV-12345",
  "customer": "XYZ Corp",
  "invoice_date": "2024-06-01",
  "sub_total": 1060,
  "total_GST": 500,
  "total_amount": 1560,
  "Line_Items": [
    {
      "item": "item_1",
      "quantity": 5,
      "price": 100,
      "total": 500
    },
    {
      "item": "item_2",
      "quantity": 10,
      "price": 50,
      "total": 500
    },
    {
      "item": "item_3",
      "quantity": 6,
      "price": 10,
      "total": 60
    }
  ]
}

Action taken: 3
Reward: 0.8777

Terminated: True
Total Return: 0.8777
Metrics: {'exact_match': 0.9473684210526315, 'similarity': 0.9792520626545262, 'State': array([0.94736844, 0.97925204], dtype=float32), 'Updated Prompt': '\n### Revised Instruction Prompt:\n\n### Instructions:\nYou are a data extraction tool designed to accurately extract data from each page of an invoice and format it according to the specified JSON schema.\n\n1. **Output Format**: Please extract the data from the invoice and format it as a JSON object. Ensure that all keys and string values are enclosed in double quotes, and numeric values are represented as numbers without quotes.\n\n2. **Data Extraction**: Extract all key-value pairs from the invoice. If there are tables present, capture all rows and columns in the JSON object, maintaining the original table structure. Include all columns, even if they are blank, using null values for missing data.\n\n3. **Handling Blank Rows and Columns**: If a row is blank, denote missing fields with "null" values. If the page contains no charge data, output an empty JSON object and do not fabricate any data.\n\n4. **Consistency in Data Types**: Ensure that the data types are consistent throughout the output. Numeric values should remain as numbers, and string values should be enclosed in double quotes.\n\n5. **Order of Key-Value Pairs**: Maintain the order of key-value pairs and tabular data as they appear in the original invoice. This order should match the provided output example.\n\n6. **Accuracy**: It is crucial that the extracted data matches the invoice exactly. Do not interpolate, make assumptions, or alter any data.\n\n### Example Output:\n```json\n{\n  "invoice_number": "12345",\n  "date": "2023-10-01",\n  "charges": [\n    {\n      "description": "Service A",\n      "amount": 100.00,\n      "quantity": 1\n    },\n    {\n      "description": "Service B",\n      "amount": 200.00,\n      "quantity": 2\n    }\n  ],\n  "total": 500.00\n}\n```\n\nPerform the task as per the above instructions on the following invoice document:\n\t\n\t\n### INPUT invoice:\n\t\n\n-----------------Invoice------------------\n                              Page 1 of 3\n\nInvoice Number: INV-12345\nCustomer: XYZ Corp\nInvoice Date: 2024-06-01\n\n\nItem    Quantity    Price     Total\nitem_1     5         $100      500\nitem_2     10        $50       500\nitem_3     6         $10       60\n\n\t\t\t\t\tSubtotal: 1060\n\t\t\t\t\tTotal GST: 500\n\t\t\t\t\tTotal Amount: $1560\n--------------------------------------------\n\n\t\n### OUTPUT JSON SCHEMA:\n\n\n\t\n{\'invoice_number\': \'string\', \'customer\': \'string\', \'invoice_date\': \'yyyy-mm-dd\', \'sub_total\': \'number\', \'total_GST\': \'number\', \'total_amount\': \'number\', \'Line_Items\': [{\'item\': \'string\', \'quantity\': \'number\', \'price\': \'number\', \'total\': \'number\'}]}\n\n\t', 'Updated Output': '{\n  "invoice_number": "INV-12345",\n  "customer": "XYZ Corp",\n  "invoice_date": "2024-06-01",\n  "sub_total": 1060,\n  "total_GST": 500,\n  "total_amount": 1560,\n  "Line_Items": [\n    {\n      "item": "item_1",\n      "quantity": 5,\n      "price": 100,\n      "total": 500\n    },\n    {\n      "item": "item_2",\n      "quantity": 10,\n      "price": 50,\n      "total": 500\n    },\n    {\n      "item": "item_3",\n      "quantity": 6,\n      "price": 10,\n      "total": 60\n    }\n  ]\n}'}

Task completed successfully!