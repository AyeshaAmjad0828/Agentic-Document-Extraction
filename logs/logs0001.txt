Warning: Could not parse JSON: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)
Error parsing generated output: Expecting property name enclosed in double quotes: line 2 column 5 (char 6)

Updated Prompt: ### Revised Instruction Prompt:

### Instructions:
You are a data extraction tool designed to extract data from each page of an invoice and format it according to the specified JSON schema.

1. **Output Format**: Please extract the data from the invoice and format it as a JSON object using single quotes for both keys and values. For example: 
   ```json
   {'key1': 'value1', 'key2': 'value2'}
   ```

2. **Data Extraction**: Extract all key-value pairs from the invoice, ensuring that the data types match those in the original document. Numeric values should remain as numbers, not strings.

3. **Table Structure**: If there are tables in the invoice, capture all rows and columns in the JSON object. Maintain the original order and formatting of the table, using lists for items. Include all columns, even if they are blank, with a null value.

4. **Handling Missing Data**: If a row is blank, denote missing fields with "null" values. If the page contains no charge data, output an empty JSON object (`{}`) without making up any data.

5. **Consistency and Clarity**: Ensure that the order of key-value pairs and tabular data aligns precisely with the original text. Avoid any interpolation or fabrication of data.

6. **Example Output**: Here is an example of the expected output format:
   ```json
   {
       'invoice_number': '12345',
       'date': '2023-10-01',
       'charges': [
           {'description': 'Service A', 'amount': 100.00},
           {'description': 'Service B', 'amount': null}
       ]
   }
   ```

Perform the task as per the above instructions on the following invoice document:
State: [0.         0.97221106]
Last_output: {
    'invoice_number': 'INV-12345',
    'customer': 'XYZ Corp',
    'invoice_date': '2024-06-01',
    'sub_total': 1060,
    'total_GST': 500,
    'total_amount': 1560,
    'Line_Items': [
        {'item': 'item_1', 'quantity': 5, 'price': 100, 'total': 500},
        {'item': 'item_2', 'quantity': 10, 'price': 50, 'total': 500},
        {'item': 'item_3', 'quantity': 6, 'price': 10, 'total': 60}
    ]
}

Action taken: 3
Reward: -0.0500

Terminated: False
Total Return: -0.0500
Metrics: {}

Current State:
Exact Match: 0.0000
Similarity: 0.9722

Exact Match Details:
Total fields: 19
Matched fields: 18
Score: 0.95

Updated Prompt: ### Revised Instruction Prompt:

### Instructions:
You are a data extraction tool designed to extract data from each page of an invoice and format it according to the specified JSON schema.

1. **Extract Data**: Please extract all relevant data from the invoice and format it as a single JSON object using double quotes for all keys and string values, as required by JSON standards.

2. **Key-Value Pairs**: Extract all key-value pairs from the invoice. Ensure that the keys match the expected output exactly, including case sensitivity.

3. **Table Data**: If there are tables in the invoice, capture all rows and columns in the JSON object. This includes:
   - Including all relevant data points, even if a column is blank; represent blank columns as keys with null values.
   - Denote missing fields in blank rows with "null" values.

4. **Empty Data Handling**: If the page contains no charge data, output an empty JSON object (`{}`) without generating any fictitious data.

5. **Maintain Structure**: Ensure that the output maintains the original table structure of the charges, encapsulating all extracted data within a single JSON object.

6. **Example Output**: For clarity, here is an example of the expected output format:
   ```json
   {
       "invoice_number": "12345",
       "date": "2023-10-01",
       "charges": [
           {
               "description": "Service A",
               "amount": 100.00,
               "quantity": 1
           },
           {
               "description": "Service B",
               "amount": 200.00,
               "quantity": null
           }
       ]
   }
   ```

The language model must interpret and execute these extraction and formatting instructions accurately.

Perform the task as per the above instructions on the following invoice document:
State: [0.94736844 0.97925204]
Last_output: {
  "invoice_number": "INV-12345",
  "customer": "XYZ Corp",
  "invoice_date": "2024-06-01",
  "sub_total": 1060,
  "total_GST": 500,
  "total_amount": 1560,
  "Line_Items": [
    {
      "item": "item_1",
      "quantity": 5,
      "price": 100,
      "total": 500
    },
    {
      "item": "item_2",
      "quantity": 10,
      "price": 50,
      "total": 500
    },
    {
      "item": "item_3",
      "quantity": 6,
      "price": 10,
      "total": 60
    }
  ]
}

Action taken: 3
Reward: 0.8777

Terminated: True
Total Return: 0.8277
Metrics: {}

Task completed successfully!
